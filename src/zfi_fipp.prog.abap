*****           Implementation of object type ZFI_FIPP             *****
INCLUDE <OBJECT>.
BEGIN_DATA OBJECT. " Do not change.. DATA is generated
* only private members may be inserted into structure private
DATA:
" begin of private,
"   to declare private attributes remove comments and
"   insert private attributes here ...
" end of private,
  BEGIN OF KEY,
      SOURCECOMPANYCODE LIKE VBKPF-AUSBK,
      DOCUMENTNO LIKE VBKPF-BELNR,
      FISCALYEAR LIKE VBKPF-GJAHR,
  END OF KEY,
      AMOUNT TYPE VBSEGD-WRBTR,
      DOCTYPE TYPE BKPF-BLART,
      CURRENCY TYPE BKPF-WAERS,
      DOCKEY TYPE STMWARN-WARNSTAT,
      VENDOR_PAY_CONTACT TYPE ADR6-SMTP_ADDR,
      VENDOR TYPE LFA1-NAME1,
      _WFSYST LIKE WFSYST.
END_DATA OBJECT. " Do not change.. DATA is generated

BEGIN_METHOD APCONFIRMATION CHANGING CONTAINER.
DATA:
      BUKRS TYPE BKPF-BUKRS,
      BELNR TYPE BKPF-BELNR,
      GJAHR TYPE BKPF-GJAHR,
      USERNAME TYPE WFSYST-INITIATOR,
      CONFTYPE TYPE ZFIS_AP_WORKFLOW-CONF_TYPE.
SWC_GET_ELEMENT CONTAINER 'Bukrs' BUKRS.
SWC_GET_ELEMENT CONTAINER 'Belnr' BELNR.
SWC_GET_ELEMENT CONTAINER 'Gjahr' GJAHR.
SWC_GET_ELEMENT CONTAINER 'Username' USERNAME.
SWC_GET_ELEMENT CONTAINER 'ConfType' CONFTYPE.
CALL FUNCTION 'ZFI_AP_CONFIRMATION'
  EXPORTING
    IMP_BUKRS     = BUKRS
    IMP_BELNR     = BELNR
    IMP_GJAHR     = GJAHR
    IMP_USERNAME  = USERNAME
    IMP_CONF_TYPE = CONFTYPE
  EXCEPTIONS
    OTHERS        = 01.
CASE SY-SUBRC.
  WHEN 0.            " OK
  WHEN OTHERS.       " to be implemented
ENDCASE.
END_METHOD.

BEGIN_METHOD DUMMY CHANGING CONTAINER.
END_METHOD.

BEGIN_METHOD APREMINDER CHANGING CONTAINER.
DATA:
      BUKRS TYPE BKPF-BUKRS,
      BELNR TYPE BKPF-BELNR,
      GJAHR TYPE BKPF-GJAHR,
      MANAGER TYPE WFSYST-INITIATOR.
SWC_GET_ELEMENT CONTAINER 'Bukrs' BUKRS.
SWC_GET_ELEMENT CONTAINER 'Belnr' BELNR.
SWC_GET_ELEMENT CONTAINER 'Gjahr' GJAHR.
SWC_GET_ELEMENT CONTAINER 'Manager' MANAGER.
CALL FUNCTION 'ZFI_AP_REMINDER'
  EXPORTING
    IMP_BUKRS   = BUKRS
    IMP_BELNR   = BELNR
    IMP_GJAHR   = GJAHR
    IMP_MANAGER = MANAGER
  EXCEPTIONS
    OTHERS      = 01.
CASE SY-SUBRC.
  WHEN 0.            " OK
  WHEN OTHERS.       " to be implemented
ENDCASE.
END_METHOD.
























BEGIN_METHOD GETAPPROVERS CHANGING CONTAINER.
DATA:
      USERNAME TYPE WFSYST-INITIATOR,
      MANAGER TYPE WFSYST-INITIATOR.
SWC_GET_ELEMENT CONTAINER 'Username' USERNAME.
CALL FUNCTION 'ZFI_GETAPPROVERS'
  EXPORTING
    IMP_USERNAME = USERNAME
  IMPORTING
    EXP_MANAGER  = MANAGER
  EXCEPTIONS
    OTHERS       = 01.
CASE SY-SUBRC.
  WHEN 0.            " OK
  WHEN OTHERS.       " to be implemented
ENDCASE.
SWC_SET_ELEMENT CONTAINER 'Manager' MANAGER.
END_METHOD.


BEGIN_METHOD APNOTIFICATION CHANGING CONTAINER.
DATA:
      USERNAME TYPE WFSYST-INITIATOR,
      USERACTION TYPE ZFIS_AP_WORKFLOW-AP_USER_ACTION.
SWC_GET_ELEMENT CONTAINER 'Username' USERNAME.
SWC_GET_ELEMENT CONTAINER 'UserAction' USERACTION.
CALL FUNCTION 'ZFI_AP_NOTIFICATION'
  EXPORTING
    IMP_BUKRS       = OBJECT-KEY-SOURCECOMPANYCODE
    IMP_BELNR       = OBJECT-KEY-DOCUMENTNO
    IMP_GJAHR       = OBJECT-KEY-FISCALYEAR
    IMP_USERNAME    = USERNAME
    IMP_USER_ACTION = USERACTION
  EXCEPTIONS
    OTHERS          = 01.
CASE SY-SUBRC.
  WHEN 0.            " OK
  WHEN OTHERS.       " to be implemented
ENDCASE.
END_METHOD.

BEGIN_METHOD GETNEXTWORKINGDATE CHANGING CONTAINER.
DATA:
      EXPENDDATE TYPE SYST-DATUM,
      EXPENDTIME TYPE SYST-UZEIT.
CALL FUNCTION 'ZFI_GET_NEXT_WORKING_DATE'
  IMPORTING
    EXP_END_DATE             = EXPENDDATE
    EXP_END_TIME             = EXPENDTIME
  EXCEPTIONS
    INVALID_FACTORY_CALENDER = 9001
    OTHERS                   = 01.
CASE SY-SUBRC.
  WHEN 0.            " OK
  WHEN 9001.         " INVALID_FACTORY_CALENDER
    EXIT_RETURN 9001 SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  WHEN OTHERS.       " to be implemented
ENDCASE.
SWC_SET_ELEMENT CONTAINER 'ExpEndDate' EXPENDDATE.
SWC_SET_ELEMENT CONTAINER 'ExpEndTime' EXPENDTIME.
END_METHOD.

TABLES WFSYST.
*
GET_TABLE_PROPERTY WFSYST.
DATA SUBRC LIKE SY-SUBRC.
* Fill TABLES WFSYST to enable Object Manager Access to Table Properties
PERFORM SELECT_TABLE_WFSYST USING SUBRC.
IF SUBRC NE 0.
  EXIT_OBJECT_NOT_FOUND.
ENDIF.
END_PROPERTY.
*
* Use Form also for other(virtual) Properties to fill TABLES WFSYST
FORM SELECT_TABLE_WFSYST USING SUBRC LIKE SY-SUBRC.
ENDFORM.                    "SELECT_TABLE_WFSYST

BEGIN_METHOD POSTINVOICE CHANGING CONTAINER.
DATA:
      DECISIONTYPE TYPE ZFIS_AP_WORKFLOW-DECISION_TYPE,
      WORKITEMID TYPE SWR_STRUCT-WORKITEMID,
      WORKITEMTOP TYPE SWR_STRUCT-WORKITEMID.
SWC_GET_ELEMENT CONTAINER 'DecisionType' DECISIONTYPE.
SWC_GET_ELEMENT CONTAINER 'WorkitemId' WORKITEMID.
SWC_GET_ELEMENT CONTAINER 'WorkitemTop' WORKITEMTOP.
CALL FUNCTION 'ZFI_AP_POST_INVOICE'
  EXPORTING
    IMP_BUKRS         = OBJECT-KEY-SOURCECOMPANYCODE
    IMP_BELNR         = OBJECT-KEY-DOCUMENTNO
    IMP_GJAHR         = OBJECT-KEY-FISCALYEAR
    IMP_DECISION_TYPE = DECISIONTYPE
    IMP_WORKITEM_ID   = WORKITEMID
    IMP_WORKITEM_TOP  = WORKITEMTOP
  EXCEPTIONS
    OTHERS            = 01.
CASE SY-SUBRC.
  WHEN 0.            " OK
  WHEN OTHERS.       " to be implemented
ENDCASE.
END_METHOD.

BEGIN_METHOD GETROUTECODEOWNER CHANGING CONTAINER.
DATA:
      EXPRCOWNER TYPE WFSYST-INITIATOR,
      EXPVENDOR TYPE LFA1-LIFNR,
      EXPVNAME TYPE LFA1-NAME1,
      EXPAMOUNT TYPE VBSEGK-DMBTR,
      EXPPDATE TYPE VBKPF-BLDAT.
CALL FUNCTION 'ZFI_AP_GET_ROUTE_CODE_OWNER'
  EXPORTING
    IMP_BUKRS    = OBJECT-KEY-SOURCECOMPANYCODE
    IMP_BELNR    = OBJECT-KEY-DOCUMENTNO
    IMP_GJAHR    = OBJECT-KEY-FISCALYEAR
  IMPORTING
    EXP_RC_OWNER = EXPRCOWNER
    EXP_VENDOR   = EXPVENDOR
    EXP_VNAME    = EXPVNAME
    EXP_AMOUNT   = EXPAMOUNT
    EXP_PDATE    = EXPPDATE
  EXCEPTIONS
    NOBODY_FOUND = 9001
    OTHERS       = 01.
CASE SY-SUBRC.
  WHEN 0.            " OK
  WHEN 9001.         " NOBODY_FOUND
    EXIT_RETURN 9001 SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  WHEN OTHERS.       " to be implemented
ENDCASE.
SWC_SET_ELEMENT CONTAINER 'ExpRcOwner' EXPRCOWNER.
SWC_SET_ELEMENT CONTAINER 'ExpVendor' EXPVENDOR.
SWC_SET_ELEMENT CONTAINER 'ExpVname' EXPVNAME.
SWC_SET_ELEMENT CONTAINER 'ExpAmount' EXPAMOUNT.
SWC_SET_ELEMENT CONTAINER 'ExpPdate' EXPPDATE.
END_METHOD.

GET_PROPERTY AMOUNT CHANGING CONTAINER.
TYPES: BEGIN OF TY_WRBTR,
         WRBTR TYPE WRBTR_D,
       END OF TY_WRBTR.

DATA: LTA_WRBTR TYPE STANDARD TABLE OF TY_WRBTR,
      LTA_WRBTR2 TYPE STANDARD TABLE OF TY_WRBTR,
      LTA_WRBTR3 TYPE STANDARD TABLE OF TY_WRBTR,
      LST_WRBTR TYPE TY_WRBTR.

SELECT WRBTR INTO TABLE LTA_WRBTR FROM VBSEGS
WHERE BUKRS = OBJECT-KEY-SOURCECOMPANYCODE
  AND   BELNR = OBJECT-KEY-DOCUMENTNO
  AND   GJAHR = OBJECT-KEY-FISCALYEAR
  AND   SHKZG = 'S'.

SELECT WRBTR INTO TABLE LTA_WRBTR2 FROM VBSEGD
WHERE BUKRS = OBJECT-KEY-SOURCECOMPANYCODE
AND   BELNR = OBJECT-KEY-DOCUMENTNO
AND   GJAHR = OBJECT-KEY-FISCALYEAR
AND   SHKZG = 'S'.

*IF sy-subrc IS NOT INITIAL.
SELECT WRBTR INTO TABLE LTA_WRBTR3 FROM VBSEGK
  WHERE BUKRS = OBJECT-KEY-SOURCECOMPANYCODE
    AND   BELNR = OBJECT-KEY-DOCUMENTNO
    AND   GJAHR = OBJECT-KEY-FISCALYEAR
    AND   SHKZG = 'S'
    AND   UMSKZ NE 'U'.
*  IF sy-subrc IS NOT INITIAL.
*SELECT wrbtr INTO TABLE lta_wrbtr3 FROM vbsegs
*WHERE bukrs = OBJECT-KEY-SOURCECOMPANYCODE
*  AND   belnr = OBJECT-KEY-DOCUMENTNO
*  AND   gjahr = OBJECT-KEY-FISCALYEAR
*  AND   SHKZG = 'S'.
*  ENDIF.
*ENDIF.

IF LTA_WRBTR[] IS INITIAL AND LTA_WRBTR2[] IS INITIAL AND LTA_WRBTR3[] IS INITIAL.
  SELECT WRBTR INTO TABLE LTA_WRBTR FROM VBSEGD
    WHERE BUKRS = OBJECT-KEY-SOURCECOMPANYCODE
    AND   BELNR = OBJECT-KEY-DOCUMENTNO
    AND   GJAHR = OBJECT-KEY-FISCALYEAR.

  IF SY-SUBRC IS NOT INITIAL.
    SELECT WRBTR INTO TABLE LTA_WRBTR FROM VBSEGK
      WHERE BUKRS = OBJECT-KEY-SOURCECOMPANYCODE
        AND   BELNR = OBJECT-KEY-DOCUMENTNO
        AND   GJAHR = OBJECT-KEY-FISCALYEAR
        AND   UMSKZ NE 'U'.
    IF SY-SUBRC IS NOT INITIAL.
      SELECT WRBTR INTO TABLE LTA_WRBTR FROM VBSEGS
      WHERE BUKRS = OBJECT-KEY-SOURCECOMPANYCODE
        AND   BELNR = OBJECT-KEY-DOCUMENTNO
        AND   GJAHR = OBJECT-KEY-FISCALYEAR.
    ENDIF.
  ENDIF.
ENDIF.

CLEAR OBJECT-AMOUNT.

LOOP AT LTA_WRBTR INTO LST_WRBTR.
  OBJECT-AMOUNT = OBJECT-AMOUNT + LST_WRBTR-WRBTR.
  CLEAR LST_WRBTR.
ENDLOOP.

LOOP AT LTA_WRBTR2 INTO LST_WRBTR.
  OBJECT-AMOUNT = OBJECT-AMOUNT + LST_WRBTR-WRBTR.
  CLEAR LST_WRBTR.
ENDLOOP.

LOOP AT LTA_WRBTR3 INTO LST_WRBTR.
  OBJECT-AMOUNT = OBJECT-AMOUNT + LST_WRBTR-WRBTR.
  CLEAR LST_WRBTR.
ENDLOOP.

SWC_SET_ELEMENT CONTAINER 'Amount' OBJECT-AMOUNT.
END_PROPERTY.

GET_PROPERTY DOCTYPE CHANGING CONTAINER.
SELECT SINGLE BLART FROM BKPF INTO OBJECT-DOCTYPE
 WHERE BUKRS = OBJECT-KEY-SOURCECOMPANYCODE
 AND   BELNR = OBJECT-KEY-DOCUMENTNO
 AND   GJAHR = OBJECT-KEY-FISCALYEAR.
IF SY-SUBRC NE 0.
  SELECT SINGLE BLART FROM VBKPF INTO OBJECT-DOCTYPE
   WHERE AUSBK = OBJECT-KEY-SOURCECOMPANYCODE
   AND   BELNR = OBJECT-KEY-DOCUMENTNO
   AND   GJAHR = OBJECT-KEY-FISCALYEAR.
ENDIF.

SWC_SET_ELEMENT CONTAINER 'DocType' OBJECT-DOCTYPE.
END_PROPERTY.

GET_PROPERTY CURRENCY CHANGING CONTAINER.
SELECT SINGLE WAERS FROM BKPF INTO OBJECT-CURRENCY
 WHERE BUKRS = OBJECT-KEY-SOURCECOMPANYCODE
 AND   BELNR = OBJECT-KEY-DOCUMENTNO
 AND   GJAHR = OBJECT-KEY-FISCALYEAR.
IF SY-SUBRC NE 0.
  SELECT SINGLE WAERS FROM VBKPF INTO OBJECT-CURRENCY
   WHERE AUSBK = OBJECT-KEY-SOURCECOMPANYCODE
   AND   BELNR = OBJECT-KEY-DOCUMENTNO
   AND   GJAHR = OBJECT-KEY-FISCALYEAR.
ENDIF.

SWC_SET_ELEMENT CONTAINER 'Currency' OBJECT-CURRENCY.
END_PROPERTY.

GET_PROPERTY DOCKEY CHANGING CONTAINER.
CONCATENATE OBJECT-KEY-DOCUMENTNO OBJECT-KEY-SOURCECOMPANYCODE INTO OBJECT-DOCKEY
SEPARATED BY SPACE.
SWC_SET_ELEMENT CONTAINER 'docKey' OBJECT-DOCKEY.
END_PROPERTY.

BEGIN_METHOD PRELIMINARYPOSTINGDOCDELETE CHANGING CONTAINER.
DATA:
      BELNN TYPE VBKPF-BELNR,
      BELNR TYPE VBKPF-BELNR,
      BSTAT TYPE VBKPF-BSTAT,
      BUKRS TYPE VBKPF-BUKRS,
      GJAHN TYPE VBKPF-GJAHR,
      GJAHR TYPE VBKPF-GJAHR.
SWC_GET_ELEMENT CONTAINER 'Belnn' BELNN.
IF SY-SUBRC <> 0.
  MOVE SPACE TO BELNN.
ENDIF.
SWC_GET_ELEMENT CONTAINER 'Belnr' BELNR.
SWC_GET_ELEMENT CONTAINER 'Bstat' BSTAT.
IF SY-SUBRC <> 0.
  MOVE SPACE TO BSTAT.
ENDIF.
SWC_GET_ELEMENT CONTAINER 'Bukrs' BUKRS.
SWC_GET_ELEMENT CONTAINER 'Gjahn' GJAHN.
IF SY-SUBRC <> 0.
  MOVE 0 TO GJAHN.
ENDIF.
SWC_GET_ELEMENT CONTAINER 'Gjahr' GJAHR.
CALL FUNCTION 'PRELIMINARY_POSTING_DOC_DELETE'
  EXPORTING
    BELNN              = BELNN
    BELNR              = BELNR
    BSTAT              = BSTAT
    BUKRS              = BUKRS
    GJAHN              = GJAHN
    GJAHR              = GJAHR
  EXCEPTIONS
    DOCUMENT_NOT_FOUND = 01
    UPDATE_ERROR       = 02
    OTHERS             = 03.
CASE SY-SUBRC.
  WHEN 0.            " OK
  WHEN 01.    " to be implemented
  WHEN 02.    " to be implemented
  WHEN OTHERS.       " to be implemented
ENDCASE.
END_METHOD.

BEGIN_METHOD GL_EXCLUDED_AGENTS CHANGING CONTAINER.
DATA:
      USERID TYPE WFSYST-AGENT,
      AGENTS TYPE WFSYST-AGENT OCCURS 0 WITH HEADER LINE,
      AGENTSUSR LIKE USR01-BNAME OCCURS 0 WITH HEADER LINE,
      T_AGENTS LIKE SWHACTOR OCCURS 0 WITH HEADER LINE.
DATA: DOCTYPE LIKE BKPF-BLART.

SWC_GET_ELEMENT CONTAINER 'UserID' USERID.

SWC_GET_PROPERTY SELF 'DocType' DOCTYPE.

CALL FUNCTION 'ZGL_GET_EXCLUSIONS'
  EXPORTING
    USERID  = USERID
    DOCTYPE = DOCTYPE
  TABLES
    AGENTS  = T_AGENTS.

LOOP AT T_AGENTS.
  CLEAR: AGENTS, AGENTSUSR.
  CONCATENATE T_AGENTS-OTYPE T_AGENTS-OBJID INTO AGENTS.
  CONDENSE AGENTS NO-GAPS.
  APPEND AGENTS.
  MOVE T_AGENTS-OBJID TO AGENTSUSR.
  APPEND AGENTSUSR.
ENDLOOP.

SWC_SET_TABLE CONTAINER 'AGENTUSERID' AGENTSUSR.
SWC_SET_TABLE CONTAINER 'Agents' AGENTS.
END_METHOD.

BEGIN_METHOD GL_REM_EXCL_AGENT CHANGING CONTAINER.
DATA:
      USERID TYPE WFSYST-AGENT,
      WA_AGENT TYPE WFSYST-AGENT,
      WA_AGENTID TYPE USR01-BNAME,
      AGENT TYPE WFSYST-AGENT OCCURS 0,
      AGENTUSERID TYPE USR01-BNAME OCCURS 0.
SWC_GET_ELEMENT CONTAINER 'USERID' USERID.
SWC_GET_TABLE CONTAINER 'AGENT' AGENT.
SWC_GET_TABLE CONTAINER 'AGENTUSERID' AGENTUSERID.

LOOP AT AGENT INTO WA_AGENT.
  IF WA_AGENT = USERID.
    DELETE AGENT INDEX SY-TABIX.
  ENDIF.
ENDLOOP.

LOOP AT AGENTUSERID INTO WA_AGENTID.
  IF WA_AGENTID = USERID+2.
    DELETE AGENTUSERID INDEX SY-TABIX.
  ENDIF.
ENDLOOP.

SWC_SET_TABLE CONTAINER 'AGENT' AGENT.
SWC_SET_TABLE CONTAINER 'AGENTUSERID' AGENTUSERID.
END_METHOD.

GET_PROPERTY VENDOR_PAY_CONTACT CHANGING CONTAINER.

DATA: W_LIFNR TYPE LFA1-LIFNR,
      W_ADRNR TYPE LFA1-ADRNR,
      W_PRSNR TYPE KNVK-PRSNR.

SELECT SINGLE LIFNR FROM VBSEGK INTO W_LIFNR WHERE
BELNR = OBJECT-KEY-DOCUMENTNO AND BUKRS = OBJECT-KEY-SOURCECOMPANYCODE
AND GJAHR = OBJECT-KEY-FISCALYEAR.

IF NOT W_LIFNR IS INITIAL.
  SELECT SINGLE ADRNR FROM LFA1 INTO W_ADRNR
    WHERE LIFNR = W_LIFNR.

  SELECT SINGLE PRSNR FROM KNVK INTO W_PRSNR
    WHERE ABTNR = '0009' AND
          PAFKT = '13' AND
          LIFNR = W_LIFNR.

  IF SY-SUBRC = 0.
    SELECT SINGLE SMTP_ADDR FROM ADR6 INTO OBJECT-VENDOR_PAY_CONTACT
      WHERE ADDRNUMBER = W_ADRNR AND
            PERSNUMBER = W_PRSNR AND
            SMTP_ADDR NE ' '.
  ENDIF.
ENDIF.

SWC_SET_ELEMENT CONTAINER 'Vendor_Pay_Contact'
     OBJECT-VENDOR_PAY_CONTACT.
END_PROPERTY.

GET_PROPERTY VENDOR CHANGING CONTAINER.

DATA: W_LIFNR TYPE LFA1-LIFNR,
      W_VENDOR TYPE LFA1-NAME1.

SELECT SINGLE LIFNR FROM VBSEGK INTO W_LIFNR WHERE
BELNR = OBJECT-KEY-DOCUMENTNO AND BUKRS = OBJECT-KEY-SOURCECOMPANYCODE
AND GJAHR = OBJECT-KEY-FISCALYEAR.

SELECT SINGLE NAME1 FROM LFA1 INTO W_VENDOR WHERE
LIFNR = W_LIFNR.

OBJECT-VENDOR = W_VENDOR.

SWC_SET_ELEMENT CONTAINER 'Vendor' OBJECT-VENDOR.
END_PROPERTY.

BEGIN_METHOD GET_FATCA_TEXT CHANGING CONTAINER.

DATA: USERID TYPE CHAR12,
      USER   TYPE WFSYST-AGENT,
      TEXT   TYPE TOAER-TEXT.

SWC_GET_ELEMENT CONTAINER 'User' USER.

USERID = USER+2(12).
CONCATENATE USERID ':CODE WT & RPT TAX AMOUNTS BASED ON GEOGRAPHY OF SERVICES PERFORMED' INTO TEXT.
SWC_SET_ELEMENT CONTAINER 'Text' TEXT.

END_METHOD.
