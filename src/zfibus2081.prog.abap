*****           Implementation of object type ZFIBUS2081           *****
INCLUDE <OBJECT>.
BEGIN_DATA OBJECT. " Do not change.. DATA is generated
* only private members may be inserted into structure private
DATA:
" begin of private,
"   to declare private attributes remove comments and
"   insert private attributes here ...
" end of private,
  BEGIN OF KEY,
      INVOICEDOCNUMBER LIKE RBKP-BELNR,
      FISCALYEAR LIKE RBKP-GJAHR,
  END OF KEY,
      SRC TYPE WFSYST-AGENT,
      DOCKEY TYPE STMWARN-WARNSTAT,
      VENDORNAME TYPE LFA1-NAME1,
      VENDOR_PAY_CONTACT TYPE ADR6-SMTP_ADDR,
      POVENDOR TYPE EKKO-LIFNR.
END_DATA OBJECT. " Do not change.. DATA is generated

BEGIN_METHOD POPUPREJECTION CHANGING CONTAINER.
DATA:
      EXPREASON TYPE ZREJECTION_REASON-REJECTION_REASON.
CALL FUNCTION 'ZFI_AP_POPUPREJECTION'
  IMPORTING
    EXP_REASON = EXPREASON
  EXCEPTIONS
    OTHERS     = 01.
CASE SY-SUBRC.
  WHEN 0.            " OK
  WHEN OTHERS.       " to be implemented
ENDCASE.
SWC_SET_ELEMENT CONTAINER 'ExpReason' EXPREASON.
END_METHOD.

BEGIN_METHOD GETSRCAPPROVER CHANGING CONTAINER.
DATA:
      EXPSRCAPPROVER TYPE EKKO-ZZARIBA_APPROVER.
CALL FUNCTION 'ZFI_GET_SRC_APPROVER'
  EXPORTING
    IMP_INVOICE     = OBJECT-KEY-INVOICEDOCNUMBER
    IMP_YEAR        = OBJECT-KEY-FISCALYEAR
  IMPORTING
    EXP_SRCAPPROVER = EXPSRCAPPROVER
  EXCEPTIONS
    OTHERS          = 01.
CASE SY-SUBRC.
  WHEN 0.            " OK
  WHEN OTHERS.       " to be implemented
ENDCASE.
SWC_SET_ELEMENT CONTAINER 'ExpSrcapprover' EXPSRCAPPROVER.
END_METHOD.

GET_PROPERTY SRC CHANGING CONTAINER.

DATA : LV_PO LIKE EKKO-EBELN,
       LV_APPR LIKE EKKO-ZZARIBA_APPROVER.
DATA:LTP_INVNUMBER  TYPE RE_BELNR,
     LTP_FISCALYEAR TYPE GJAHR.
DATA:
    S_HEADERDATA        TYPE BAPI_INCINV_DETAIL_HEADER,
    S_ADDRESSDATA       TYPE BAPI_INCINV_DETAIL_ADDRESSDATA.
DATA:TAB_ITEMDATA        TYPE STANDARD TABLE OF
                         BAPI_INCINV_DETAIL_ITEM,
     TAB_ACCOUNTINGDATA  TYPE STANDARD TABLE OF
                         BAPI_INCINV_DETAIL_ACCOUNT,
     TAB_GLACCOUNTDATA   TYPE STANDARD TABLE OF
                         BAPI_INCINV_DETAIL_GL_ACCOUNT,
     TAB_TAXDATA         TYPE STANDARD TABLE OF
                         BAPI_INCINV_DETAIL_TAX,
     TAB_WITHTAXDATA     TYPE STANDARD TABLE OF
                         BAPI_INCINV_DETAIL_WITHTAX,
     TAB_MATERIALDATA    TYPE STANDARD TABLE OF
                         BAPI_INCINV_DETAIL_MATERIAL,
     TAB_VENDORSPLITDATA TYPE STANDARD TABLE OF
                         BAPI_INCINV_DETAIL_VENDORSPLIT,
     TAB_RETURN          TYPE STANDARD TABLE OF BAPIRET2.
DATA:S_ITEMDATA           TYPE BAPI_INCINV_DETAIL_ITEM.

LTP_INVNUMBER = OBJECT-KEY-INVOICEDOCNUMBER.
LTP_FISCALYEAR = OBJECT-KEY-FISCALYEAR.

CALL FUNCTION 'BAPI_INCOMINGINVOICE_GETDETAIL'
  EXPORTING
    INVOICEDOCNUMBER    = LTP_INVNUMBER
    FISCALYEAR          = LTP_FISCALYEAR
  IMPORTING
    HEADERDATA          = S_HEADERDATA
    ADDRESSDATA         = S_ADDRESSDATA
  TABLES
    ITEMDATA            = TAB_ITEMDATA
    ACCOUNTINGDATA      = TAB_ACCOUNTINGDATA
    GLACCOUNTDATA       = TAB_GLACCOUNTDATA
    MATERIALDATA        = TAB_MATERIALDATA
    TAXDATA             = TAB_TAXDATA
    WITHTAXDATA         = TAB_WITHTAXDATA
    VENDORITEMSPLITDATA = TAB_VENDORSPLITDATA
    RETURN              = TAB_RETURN
  EXCEPTIONS
    OTHERS              = 01.

LOOP AT TAB_ITEMDATA INTO S_ITEMDATA.
  LV_PO = S_ITEMDATA-PO_NUMBER.
  CLEAR:S_ITEMDATA.
ENDLOOP.

SELECT SINGLE ZZARIBA_APPROVER FROM EKKO INTO LV_APPR
WHERE EBELN = LV_PO.
IF SY-SUBRC = 0.
  CONCATENATE 'US' LV_APPR INTO OBJECT-SRC.
  CONDENSE OBJECT-SRC NO-GAPS.
ENDIF.


SWC_SET_ELEMENT CONTAINER 'SRC' OBJECT-SRC.
END_PROPERTY.

GET_PROPERTY DOCKEY CHANGING CONTAINER.
DATA: W_CC TYPE RBKP-BUKRS,
      W_OBJ TYPE SWC_OBJECT.

SWC_GET_PROPERTY SELF 'CompanyCode' W_OBJ.
SWC_GET_PROPERTY W_OBJ 'CompanyCodeID' W_CC.

CONCATENATE W_CC OBJECT-KEY-INVOICEDOCNUMBER INTO OBJECT-DOCKEY
SEPARATED BY SPACE.


SWC_SET_ELEMENT CONTAINER 'dockey' OBJECT-DOCKEY.
END_PROPERTY.

BEGIN_METHOD POSTCONFIRM CHANGING CONTAINER.
DATA:
      CHOICE TYPE WFSYST-DEF_VERSIO,
      ROLES TYPE AGR_USERS-AGR_NAME OCCURS 0 WITH HEADER LINE,
      W_STAT TYPE RBKP-RBSTAT.

DATA: W_BNAME LIKE USR02-BNAME,
      W_APP TYPE CHAR1,
      W_SAVE TYPE CHAR1,
      W_WRBTR LIKE BSEG-WRBTR,
      W_BUKRS LIKE BKPF-BUKRS,
      W_XBLNR LIKE BKPF-XBLNR,
      W_BELNR LIKE BKPF-BELNR,
      W_GJAHR LIKE BKPF-GJAHR,
      W_VENDOR TYPE LIFRE,         "MZH01
      W_FATCA  TYPE FLAG,          "MZH01
      O_CC TYPE SWC_OBJECT,
      E_POST LIKE BOOLE-BOOLE.
RANGES: R_ROLE FOR AGR_USERS-AGR_NAME.

SWC_GET_TABLE CONTAINER 'Roles' ROLES.
SWC_GET_ELEMENT CONTAINER 'Stat' W_STAT.

R_ROLE-SIGN = 'I'.
R_ROLE-OPTION = 'EQ'.
LOOP AT ROLES.
  R_ROLE-LOW = ROLES.
  APPEND R_ROLE.
ENDLOOP.

* SWC_CREATE_OBJECT USROBJ 'USR01DOHR' sy-uname.

SELECT SINGLE UNAME FROM AGR_USERS INTO W_BNAME
     WHERE AGR_NAME IN R_ROLE AND
      UNAME = SY-UNAME.
IF SY-SUBRC = 0.
  W_APP = 'Y'.
ENDIF.

IF W_STAT NE 'B'.
  W_SAVE = 'N'.
ENDIF.

IF W_APP NE 'Y'.
  MESSAGE S000(ZFI_WORKFLOW) WITH 'You do not have required security role'
  ' ' ' ' ' '.
  CHOICE = 'FORW'.
ELSEIF W_SAVE EQ 'N'.
  MESSAGE S000(ZFI_WORKFLOW) WITH 'Invoice is Not Saved as Complete'
  ' ' ' ' ' '.
  CHOICE = 'FORW'.
ELSE.

  SWC_GET_PROPERTY SELF 'Reference'          W_XBLNR.
  SWC_GET_PROPERTY SELF 'GrossInvoiceAmount' W_WRBTR.
  SWC_GET_PROPERTY SELF 'CompanyCode'        O_CC.
  SWC_GET_PROPERTY O_CC 'CompanyCodeId'      W_BUKRS.
  SWC_GET_PROPERTY SELF 'VendorNum'          W_VENDOR.    "MZH01

  W_BELNR = OBJECT-KEY-INVOICEDOCNUMBER.
  W_GJAHR = OBJECT-KEY-FISCALYEAR.

* Begin of MZH01
  CALL FUNCTION 'Z_FATCA_CHECK'
    EXPORTING
      BUKRS   = W_BUKRS
      BELNR   = W_BELNR
      GJAHR   = W_GJAHR
      LIFNR   = W_VENDOR
    IMPORTING
      NO_PASS = W_FATCA.

  IF W_FATCA = 'X'.
    MESSAGE S000(ZFI_WORKFLOW) WITH 'FATCA Check'
    'Reject Back to AP' ' ' ' '.
    CHOICE = 'FORW'.
  ELSE.
* End of MZH01

    CALL FUNCTION 'ZFI_DUPL_CHECK_WF'
      EXPORTING
        I_BUKRS = W_BUKRS
        I_XBLNR = W_XBLNR
        I_WRBTR = W_WRBTR
        I_BELNR = W_BELNR
        I_GJAHR = W_GJAHR
      IMPORTING
        E_POST  = E_POST.
    IF E_POST = 'X'.
      CHOICE = 'POST'.
    ELSE.
      CHOICE = 'FORW'.
    ENDIF.
  ENDIF. "MZH01
ENDIF.

SWC_SET_ELEMENT CONTAINER 'FATCA' W_FATCA.   "MZH01
SWC_SET_ELEMENT CONTAINER 'Choice' CHOICE.
END_METHOD.

BEGIN_METHOD ZEDIT CHANGING CONTAINER.

DATA: XWFLA1 LIKE BOOLE-BOOLE VALUE 'X'.                    "Note916729
DATA: W_DEC(4) TYPE C,
      W_ANS TYPE XFELD.


DO.
  CALL FUNCTION 'Z_POPUP_WITH_2_OPTIONS'
    EXPORTING
      TEXTLINE1    = 'Confirm Your Action'
      TEXT_OPTION1 = 'Display'
      TEXT_OPTION2 = 'Edit'
      TITLE        = 'Please Select'
    IMPORTING
      ANSWER       = W_ANS.
  IF W_ANS = 1.
    W_DEC = 'DIS'.
    EXIT.
  ELSE.
    W_DEC = 'CHNG'.
    EXIT.
  ENDIF.
ENDDO.

SET PARAMETER ID 'RBN' FIELD OBJECT-KEY-INVOICEDOCNUMBER.
SET PARAMETER ID 'GJR' FIELD OBJECT-KEY-FISCALYEAR.

IF W_DEC = 'CHNG'.
  SET PARAMETER ID 'CHG' FIELD 'X'.
  EXPORT XWFLA1 TO MEMORY ID 'FIENJOYWF'.                   "Note916729
  CALL TRANSACTION 'ZMIR4' AND SKIP FIRST SCREEN.
ELSEIF W_DEC = 'DIS'.
  CALL TRANSACTION 'MIR4' AND SKIP FIRST SCREEN.
ENDIF.

END_METHOD.

BEGIN_METHOD REJECTCONFIRM CHANGING CONTAINER.
DATA:
      CHOICE TYPE WFSYST-DEF_VERSIO,
      ROLES TYPE AGR_USERS-AGR_NAME OCCURS 0  WITH HEADER LINE.
RANGES: R_ROLE FOR AGR_USERS-AGR_NAME.
DATA: W_BNAME LIKE USR02-BNAME,
      W_APP TYPE CHAR1.


SWC_GET_TABLE CONTAINER 'Roles' ROLES.

R_ROLE-SIGN = 'I'.
R_ROLE-OPTION = 'EQ'.
LOOP AT ROLES.
  R_ROLE-LOW = ROLES.
  APPEND R_ROLE.
ENDLOOP.

SELECT SINGLE UNAME FROM AGR_USERS INTO W_BNAME
     WHERE AGR_NAME IN R_ROLE AND
      UNAME = SY-UNAME.
IF SY-SUBRC = 0.
  W_APP = 'Y'.
ENDIF.

IF W_APP NE 'Y'.
  MESSAGE S000(ZFI_WORKFLOW) WITH 'You do not have required security role'
  ' ' ' ' ' '.
  CHOICE = 'FORW'.
ELSE.
  CHOICE = 'REJ'.
ENDIF.

SWC_SET_ELEMENT CONTAINER 'Choice' CHOICE.
END_METHOD.

GET_PROPERTY VENDORNAME CHANGING CONTAINER.
DATA: W_VEN TYPE LIFRE.

SELECT SINGLE LIFNR FROM RBKP INTO W_VEN
  WHERE BELNR = OBJECT-KEY-INVOICEDOCNUMBER AND
        GJAHR = OBJECT-KEY-FISCALYEAR.

SELECT SINGLE NAME1 FROM LFA1 INTO OBJECT-VENDORNAME
  WHERE LIFNR = W_VEN.

SWC_SET_ELEMENT CONTAINER 'VendorName' OBJECT-VENDORNAME.
END_PROPERTY.

BEGIN_METHOD CONFIRM_POSTED CHANGING CONTAINER.
DATA:
      INV_STAT TYPE RBKP-RBSTAT.

SELECT SINGLE RBSTAT FROM RBKP INTO INV_STAT
  WHERE BELNR = OBJECT-KEY-INVOICEDOCNUMBER   AND
        GJAHR = OBJECT-KEY-FISCALYEAR .

SWC_SET_ELEMENT CONTAINER 'Inv_stat' INV_STAT.
END_METHOD.

GET_PROPERTY VENDOR_PAY_CONTACT CHANGING CONTAINER.

DATA: W_LIFNR TYPE LFA1-LIFNR,
      W_ADRNR TYPE LFA1-ADRNR,
      W_PRSNR TYPE KNVK-PRSNR.

SELECT SINGLE LIFNR FROM RBKP INTO W_LIFNR
  WHERE BELNR = OBJECT-KEY-INVOICEDOCNUMBER
    AND GJAHR = OBJECT-KEY-FISCALYEAR.

IF NOT W_LIFNR IS INITIAL.
  SELECT SINGLE ADRNR FROM LFA1 INTO W_ADRNR
    WHERE LIFNR = W_LIFNR.

  IF SY-SUBRC = 0.
    SELECT SINGLE PRSNR FROM KNVK INTO W_PRSNR
      WHERE ABTNR = '0009' AND
            PAFKT = '13' AND
            LIFNR = W_LIFNR.
    IF SY-SUBRC = 0.
      SELECT SINGLE SMTP_ADDR FROM ADR6 INTO OBJECT-VENDOR_PAY_CONTACT
        WHERE ADDRNUMBER = W_ADRNR AND
              PERSNUMBER = W_PRSNR AND
              SMTP_ADDR NE ' '.
    ENDIF.
  ENDIF.
ENDIF.

SWC_SET_ELEMENT CONTAINER 'Vendor_Pay_Contact'
     OBJECT-VENDOR_PAY_CONTACT.
END_PROPERTY.

BEGIN_METHOD SENDARIBADELEMAIL CHANGING CONTAINER.
DATA: LV_BLART TYPE BLART,
      LV_BELNR TYPE RE_BELNR,
      LV_LIFNR TYPE LIFNR,
      LV_EMNFR TYPE EMNFR,
      LV_XBLNR TYPE XBLNR,
      LV_GJAHR TYPE GJAHR,
      LV_TEXT  TYPE CHAR255,
      LV_ACTION TYPE BKTXT,
      LV_ACT  TYPE CHAR1,
      LV_REASON TYPE CHAR255.

LV_BELNR = OBJECT-KEY-INVOICEDOCNUMBER.
LV_GJAHR = OBJECT-KEY-FISCALYEAR.

SWC_GET_PROPERTY SELF 'POVendor' LV_LIFNR.
SWC_GET_PROPERTY SELF 'Reference' LV_XBLNR.
SWC_GET_PROPERTY SELF 'DocumentType' LV_BLART.

SWC_GET_ELEMENT CONTAINER 'Reason' LV_REASON.
SWC_GET_ELEMENT CONTAINER 'Action' LV_ACT.

IF NOT LV_LIFNR IS INITIAL.
  SELECT SINGLE EMNFR FROM LFA1 INTO LV_EMNFR
    WHERE LIFNR = LV_LIFNR.
ENDIF.

IF LV_ACT = 'D'.
  CONCATENATE 'Date: ' SY-DATLO(4) ':' SY-DATLO+4(2) ':' SY-DATLO+6(2)
              ' AND: ' SY-TIMLO(2) ':' SY-TIMLO+2(2) ':' SY-TIMLO+4(2)
              ' - INVOICE# ' LV_TEXT ' WAS DELETED BY SPECTRA' INTO LV_TEXT.
  LV_ACTION = 'DELETE'.
ELSEIF LV_ACT = 'O'.
  CONCATENATE 'Date: ' SY-DATLO(4) ':' SY-DATLO+4(2) ':' SY-DATLO+6(2)
              ' AND: ' SY-TIMLO(2) ':' SY-TIMLO+2(2) ':' SY-TIMLO+4(2)
              ' - INVOICE# ' LV_TEXT ' WAS POSTED BY SPECTRA' INTO LV_TEXT.
  LV_ACTION = 'OPEN'.
ENDIF.

CALL FUNCTION 'Z_IDOC_CREATE_ZARBIST01'
  EXPORTING
    IM_DOC_TYP                   = LV_BLART
    IM_INV_DOC_NO                = LV_BELNR
    IM_VND_NO                    = LV_LIFNR
    IM_ARIB_COM_SUP              = LV_EMNFR
    IM_SUP_INV_NO                = LV_XBLNR
    IM_INV_STATUS                = LV_ACTION
    IM_ZTEXT                     = LV_TEXT
    IM_YEAR                      = LV_GJAHR
    IM_REJ_REASON                = LV_REASON
  EXCEPTIONS
    ERROR_IDOC_CONTROL           = 1
    ERROR_IDOC_STATUS            = 2
    ERROR_IDOC_DATA              = 3
    ERROR_LOGICAL_SYSTEM_UNKNOWN = 4
    ERROR_OTHER                  = 5
    OTHERS                       = 6.

END_METHOD.

GET_PROPERTY POVENDOR CHANGING CONTAINER.
DATA : LV_PO LIKE EKKO-EBELN,
       LV_APPR LIKE EKKO-ZZARIBA_APPROVER.
DATA:LTP_INVNUMBER  TYPE RE_BELNR,
     LTP_FISCALYEAR TYPE GJAHR.
DATA:
    S_HEADERDATA        TYPE BAPI_INCINV_DETAIL_HEADER,
    S_ADDRESSDATA       TYPE BAPI_INCINV_DETAIL_ADDRESSDATA.
DATA:TAB_ITEMDATA        TYPE STANDARD TABLE OF
                         BAPI_INCINV_DETAIL_ITEM,
     TAB_ACCOUNTINGDATA  TYPE STANDARD TABLE OF
                         BAPI_INCINV_DETAIL_ACCOUNT,
     TAB_GLACCOUNTDATA   TYPE STANDARD TABLE OF
                         BAPI_INCINV_DETAIL_GL_ACCOUNT,
     TAB_TAXDATA         TYPE STANDARD TABLE OF
                         BAPI_INCINV_DETAIL_TAX,
     TAB_WITHTAXDATA     TYPE STANDARD TABLE OF
                         BAPI_INCINV_DETAIL_WITHTAX,
     TAB_MATERIALDATA    TYPE STANDARD TABLE OF
                         BAPI_INCINV_DETAIL_MATERIAL,
     TAB_VENDORSPLITDATA TYPE STANDARD TABLE OF
                         BAPI_INCINV_DETAIL_VENDORSPLIT,
     TAB_RETURN          TYPE STANDARD TABLE OF BAPIRET2.
DATA:S_ITEMDATA           TYPE BAPI_INCINV_DETAIL_ITEM.

LTP_INVNUMBER = OBJECT-KEY-INVOICEDOCNUMBER.
LTP_FISCALYEAR = OBJECT-KEY-FISCALYEAR.

CALL FUNCTION 'BAPI_INCOMINGINVOICE_GETDETAIL'
  EXPORTING
    INVOICEDOCNUMBER    = LTP_INVNUMBER
    FISCALYEAR          = LTP_FISCALYEAR
  IMPORTING
    HEADERDATA          = S_HEADERDATA
    ADDRESSDATA         = S_ADDRESSDATA
  TABLES
    ITEMDATA            = TAB_ITEMDATA
    ACCOUNTINGDATA      = TAB_ACCOUNTINGDATA
    GLACCOUNTDATA       = TAB_GLACCOUNTDATA
    MATERIALDATA        = TAB_MATERIALDATA
    TAXDATA             = TAB_TAXDATA
    WITHTAXDATA         = TAB_WITHTAXDATA
    VENDORITEMSPLITDATA = TAB_VENDORSPLITDATA
    RETURN              = TAB_RETURN
  EXCEPTIONS
    OTHERS              = 01.

LOOP AT TAB_ITEMDATA INTO S_ITEMDATA.
  LV_PO = S_ITEMDATA-PO_NUMBER.
  CLEAR:S_ITEMDATA.
  IF NOT LV_PO IS INITIAL.
    EXIT.
  ENDIF.
ENDLOOP.

SELECT SINGLE LIFNR FROM EKKO INTO OBJECT-POVENDOR
WHERE EBELN = LV_PO.

SWC_SET_ELEMENT CONTAINER 'POVendor' OBJECT-POVENDOR.
END_PROPERTY.
