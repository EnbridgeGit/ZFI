*---------------------------------------------------------------------*
*    view related FORM routines
*---------------------------------------------------------------------*
*...processing: ZFIMV_VAL_BLART.................................*
FORM GET_DATA_ZFIMV_VAL_BLART.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZFIT_VALID_BLART WHERE
(VIM_WHERETAB) .
    CLEAR ZFIMV_VAL_BLART .
ZFIMV_VAL_BLART-MANDT =
ZFIT_VALID_BLART-MANDT .
ZFIMV_VAL_BLART-BLART =
ZFIT_VALID_BLART-BLART .
ZFIMV_VAL_BLART-WORKFLOW =
ZFIT_VALID_BLART-WORKFLOW .
    SELECT SINGLE * FROM T003 WHERE
BLART = ZFIT_VALID_BLART-BLART .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM T003T WHERE
BLART = T003-BLART AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
ZFIMV_VAL_BLART-LTEXT =
T003T-LTEXT .
      ENDIF.
    ENDIF.
<VIM_TOTAL_STRUC> = ZFIMV_VAL_BLART.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZFIMV_VAL_BLART .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZFIMV_VAL_BLART.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZFIMV_VAL_BLART-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZFIT_VALID_BLART WHERE
  BLART = ZFIMV_VAL_BLART-BLART AND
  WORKFLOW = ZFIMV_VAL_BLART-WORKFLOW .
    IF SY-SUBRC = 0.
    DELETE ZFIT_VALID_BLART .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZFIT_VALID_BLART WHERE
  BLART = ZFIMV_VAL_BLART-BLART AND
  WORKFLOW = ZFIMV_VAL_BLART-WORKFLOW .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZFIT_VALID_BLART.
    ENDIF.
ZFIT_VALID_BLART-MANDT =
ZFIMV_VAL_BLART-MANDT .
ZFIT_VALID_BLART-BLART =
ZFIMV_VAL_BLART-BLART .
ZFIT_VALID_BLART-WORKFLOW =
ZFIMV_VAL_BLART-WORKFLOW .
    IF SY-SUBRC = 0.
    UPDATE ZFIT_VALID_BLART .
    ELSE.
    INSERT ZFIT_VALID_BLART .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZFIMV_VAL_BLART-UPD_FLAG,
STATUS_ZFIMV_VAL_BLART-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ZFIMV_VAL_BLART.
  SELECT SINGLE * FROM ZFIT_VALID_BLART WHERE
BLART = ZFIMV_VAL_BLART-BLART AND
WORKFLOW = ZFIMV_VAL_BLART-WORKFLOW .
ZFIMV_VAL_BLART-MANDT =
ZFIT_VALID_BLART-MANDT .
ZFIMV_VAL_BLART-BLART =
ZFIT_VALID_BLART-BLART .
ZFIMV_VAL_BLART-WORKFLOW =
ZFIT_VALID_BLART-WORKFLOW .
    SELECT SINGLE * FROM T003 WHERE
BLART = ZFIT_VALID_BLART-BLART .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM T003T WHERE
BLART = T003-BLART AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
ZFIMV_VAL_BLART-LTEXT =
T003T-LTEXT .
      ELSE.
        CLEAR SY-SUBRC.
        CLEAR ZFIMV_VAL_BLART-LTEXT .
      ENDIF.
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZFIMV_VAL_BLART-LTEXT .
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZFIMV_VAL_BLART USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZFIMV_VAL_BLART-BLART TO
ZFIT_VALID_BLART-BLART .
MOVE ZFIMV_VAL_BLART-WORKFLOW TO
ZFIT_VALID_BLART-WORKFLOW .
MOVE ZFIMV_VAL_BLART-MANDT TO
ZFIT_VALID_BLART-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZFIT_VALID_BLART'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZFIT_VALID_BLART TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZFIT_VALID_BLART'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
FORM COMPL_ZFIMV_VAL_BLART USING WORKAREA.
*      provides (read-only) fields from secondary tables related
*      to primary tables by foreignkey relationships
ZFIT_VALID_BLART-MANDT =
ZFIMV_VAL_BLART-MANDT .
ZFIT_VALID_BLART-BLART =
ZFIMV_VAL_BLART-BLART .
ZFIT_VALID_BLART-WORKFLOW =
ZFIMV_VAL_BLART-WORKFLOW .
    SELECT SINGLE * FROM T003 WHERE
BLART = ZFIT_VALID_BLART-BLART .
    IF SY-SUBRC EQ 0.
      SELECT SINGLE * FROM T003T WHERE
BLART = T003-BLART AND
SPRAS = SY-LANGU .
      IF SY-SUBRC EQ 0.
ZFIMV_VAL_BLART-LTEXT =
T003T-LTEXT .
      ELSE.
        CLEAR SY-SUBRC.
        CLEAR ZFIMV_VAL_BLART-LTEXT .
      ENDIF.
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZFIMV_VAL_BLART-LTEXT .
    ENDIF.
ENDFORM.
